{"ast":null,"code":"var _jsxFileName = \"/home/abhshk/Desktop/Code-Collab-main/code-collab/src/components/Editorpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport logo from '../images/output-onlinepngtools.png';\nimport Client from './Client';\nimport Editor from './Editor';\nimport { useRef } from 'react';\nimport { initSocket } from '../socket.js';\nimport { useLocation } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport ACTIONS from '../Actions';\nimport { useNavigate, Navigate, useParams } from 'react-router-dom';\nimport Chat from './Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editorpage = () => {\n  _s();\n\n  const socketRef = useRef(null);\n  const codeRef = useRef(null);\n  const location = useLocation();\n  const {\n    roomId\n  } = useParams();\n  const reactNavigator = useNavigate();\n  const [clients, setClients] = useState([]);\n\n  function handleErrors(e) {\n    console.log('socket error', e);\n    toast.errror('Socket Connection failed , try again later.');\n    reactNavigator('/');\n  }\n\n  useEffect(() => {\n    const init = async () => {\n      var _location$state;\n\n      //Connection with Socket io\n      socketRef.current = await initSocket();\n      socketRef.current.on('connect_error', err => handleErrors(err));\n      socketRef.current.on('connect_failed', err => handleErrors(err));\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        username: (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username\n      });\n      console.log(clients); //For joining\n\n      socketRef.current.on(ACTIONS.JOINED, _ref => {\n        var _location$state2;\n\n        let {\n          clients,\n          username,\n          socketId\n        } = _ref;\n\n        if (username !== ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.username)) {\n          toast.success(`${username} joined the room.`);\n          console.log(`${username} joined`);\n        }\n\n        setClients(clients);\n        socketRef.current.emit(ACTIONS.SYNC_CODE, {\n          code: codeRef.current,\n          socketId\n        });\n      }); //For disconnection\n\n      socketRef.current.on(ACTIONS.DISCONNECTED, _ref2 => {\n        let {\n          socketId,\n          username\n        } = _ref2;\n        toast.success(`${username} left the room.`);\n        setClients(prev => {\n          return prev.filter(client => client.socketId !== socketId);\n        });\n      });\n    };\n\n    init();\n    return () => {\n      socketRef.current.disconnect();\n      socketRef.current.off(ACTIONS.JOINED);\n      socketRef.current.off(ACTIONS.DISCONNECTED);\n    };\n  }, []);\n\n  if (!location.state) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n\n  const copyRoomId = async () => {\n    try {\n      await navigator.clipboard.writeText(roomId);\n      toast.success('Room Id has been copied to clipboard');\n    } catch (err) {\n      toast.error('Could not copy Room Id');\n      console.log(err);\n    }\n  };\n\n  const leaveRoom = () => {\n    reactNavigator('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"minWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asideInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logoImage\",\n            style: {\n              height: '40px',\n              width: '40px'\n            },\n            src: logo,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: 'rgb(231 11 56 / 78%)',\n              paddingTop: '8px',\n              paddingLeft: '10px',\n              fontWeight: '800'\n            },\n            children: \"Code-Collab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            paddingTop: '1.5rem',\n            paddingBottom: '0.8rem'\n          },\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientsList\",\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(Client, {\n            username: client.username\n          }, client.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-copy-btn\",\n        style: {\n          backgroundColor: '#4d67c3',\n          border: 'none',\n          outline: 'none'\n        },\n        onClick: copyRoomId,\n        children: \"COPY ROOM ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-leave-btn\",\n        style: {\n          backgroundColor: 'rgb(231 11 56 / 78%)',\n          border: 'none'\n        },\n        onClick: leaveRoom,\n        children: \"LEAVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middleTab\",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          socketRef: socketRef,\n          roomId: roomId,\n          onCodeChange: code => {\n            codeRef.current = code;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rightTab\",\n        children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Editorpage, \"O5aMOdwt2wCnuqVQk7SgEgKtMHE=\", false, function () {\n  return [useLocation, useParams, useNavigate];\n});\n\n_c = Editorpage;\nexport default Editorpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editorpage\");","map":{"version":3,"names":["React","useEffect","useState","Button","logo","Client","Editor","useRef","initSocket","useLocation","toast","ACTIONS","useNavigate","Navigate","useParams","Chat","Editorpage","socketRef","codeRef","location","roomId","reactNavigator","clients","setClients","handleErrors","e","console","log","errror","init","current","on","err","emit","JOIN","username","state","JOINED","socketId","success","SYNC_CODE","code","DISCONNECTED","prev","filter","client","disconnect","off","copyRoomId","navigator","clipboard","writeText","error","leaveRoom","height","width","color","paddingTop","paddingLeft","fontWeight","paddingBottom","map","backgroundColor","border","outline"],"sources":["/home/abhshk/Desktop/Code-Collab-main/code-collab/src/components/Editorpage.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport logo from '../images/output-onlinepngtools.png';\r\nimport Client from './Client';\r\nimport Editor from './Editor';\r\nimport { useRef } from 'react';\r\nimport { initSocket } from '../socket.js';\r\nimport { useLocation } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport ACTIONS from '../Actions';\r\nimport { useNavigate, Navigate, useParams } from 'react-router-dom';\r\nimport Chat from './Chat';\r\n\r\nconst Editorpage = () => {\r\n  const socketRef = useRef(null);\r\n  const codeRef = useRef(null);\r\n  const location = useLocation();\r\n\r\n  const { roomId } = useParams();\r\n  const reactNavigator = useNavigate();\r\n  const [clients, setClients] = useState([]);\r\n\r\n  function handleErrors(e) {\r\n    console.log('socket error', e);\r\n    toast.errror('Socket Connection failed , try again later.');\r\n    reactNavigator('/');\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    const init = async () => {\r\n\r\n      //Connection with Socket io\r\n      socketRef.current = await initSocket();\r\n\r\n      socketRef.current.on('connect_error', (err) => handleErrors(err));\r\n      socketRef.current.on('connect_failed', (err) => handleErrors(err));\r\n\r\n      socketRef.current.emit(ACTIONS.JOIN, {\r\n        roomId,\r\n        username: location.state?.username,\r\n      });\r\n      console.log(clients);\r\n\r\n      //For joining\r\n      socketRef.current.on(ACTIONS.JOINED, ({ clients, username, socketId }) => {\r\n        if (username !== location.state?.username) {\r\n          toast.success(`${username} joined the room.`);\r\n          console.log(`${username} joined`);\r\n        }\r\n        setClients(clients);\r\n        socketRef.current.emit(ACTIONS.SYNC_CODE, {\r\n          code: codeRef.current,\r\n          socketId,\r\n        });\r\n      }\r\n      );\r\n\r\n      //For disconnection\r\n      socketRef.current.on(ACTIONS.DISCONNECTED, ({ socketId, username }) => {\r\n        toast.success(`${username} left the room.`);\r\n        setClients((prev) => {\r\n          return prev.filter(client => client.socketId !== socketId)\r\n        })\r\n      })\r\n\r\n    }\r\n    init();\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n      socketRef.current.off(ACTIONS.JOINED);\r\n      socketRef.current.off(ACTIONS.DISCONNECTED);\r\n    };\r\n\r\n  }, [])\r\n\r\n  if (!location.state) {\r\n    return <Navigate to=\"/\" />\r\n  }\r\n  const copyRoomId = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(roomId);\r\n      toast.success('Room Id has been copied to clipboard')\r\n    } catch (err) {\r\n      toast.error('Could not copy Room Id');\r\n      console.log(err);\r\n    }\r\n  }\r\n  const leaveRoom = () => {\r\n    reactNavigator('/')\r\n  }\r\n  return (\r\n    <div className=\"minWrap\">\r\n      <div className=\"aside\">\r\n        <div className=\"asideInner\">\r\n          <div className=\"logo\">\r\n            <img className='logoImage' style={{ height: '40px', width: '40px' }} src={logo} alt=\"logo\" />\r\n            <h3 style={{ color: 'rgb(231 11 56 / 78%)', paddingTop: '8px', paddingLeft: '10px', fontWeight: '800' }}>Code-Collab</h3>\r\n          </div>\r\n          <h5 style={{ paddingTop: '1.5rem', paddingBottom: '0.8rem' }}>Connected</h5>\r\n          <div className='clientsList'>\r\n            {clients.map((client) => (\r\n              <Client key={client.socketId} username={client.username} />\r\n            ))}\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <Button className='btn-copy-btn' style={{ backgroundColor: '#4d67c3', border: 'none', outline: 'none' }} onClick={copyRoomId}>COPY ROOM ID</Button>\r\n        <Button className='btn-leave-btn' style={{ backgroundColor: 'rgb(231 11 56 / 78%)', border: 'none' }} onClick={leaveRoom}>LEAVE</Button>\r\n      </div>\r\n      <div className=\"editorWrap\">\r\n        <div className='middleTab'>\r\n          <Editor socketRef={socketRef} roomId={roomId} onCodeChange={(code) => { codeRef.current = code; }} />\r\n        </div>\r\n\r\n        <div className='rightTab'>\r\n          <Chat />\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Editorpage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}